python
>from main import db
>db.create_all()

>python -m pip freeze > requirements.txt

**************Checking status of a port
>netstat -tupln | grep 5000

******inserting data
>from app import db, Customer
>user=Customer(first_name="yousra",last_name="mashkoor",address="123 street", city="karachi", postcode="1234",email="yousra@gmail.com")
>db.session.add(user)
>db.session.commit()



**********creating venv:

>sudo su
>python3 -m venv venv
>apt-get install python3-venv #if not already
>sudo -u yousra -H bash
>source /customerAPI/venv/bin/activate


******************deleting a file from git but not in local,
>add the file to gitignore
>git rm -r --cached name-of-the-folder
>git commit -m "insert your comment inside this quotation marks"
>git push origin


*******************creating db
>sudo -i -u postgresql
>> createdb test --owner=openerp -Ttemp



******************Help links:

https://stackabuse.com/using-sqlalchemy-with-flask-and-postgresql/
https://courses.prettyprinted.com/courses/1016334/lectures/21156610
https://realpython.com/flask-by-example-part-2-postgres-sqlalchemy-and-alembic/
https://www.youtube.com/watch?v=VSzNYfDQp8Y&list=PLei96ZX_m9sWQco3fwtSMqyGL-JDQo28l&index=5
https://build.vsupalov.com/flask-sqlalchemy-postgres/



*************** STEPS FOR JWT TOKEN
1. create function to decode the token and match from record
2. Hash the password if required (for registration)
3. During login generate a token (that would later be passed to func in step 01)
4. Now create routes and call func in step01 for validation before generating result

https://geekflare.com/securing-flask-api-with-jwt/
